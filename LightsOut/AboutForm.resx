<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAAAAAACACoCAAAJgAAABAQAAAAAAgAaAUAAM4IAAAoAAAAIAAAAEAAAAABAAgAAAAAAAAE
        AAAAAAAAAAAAAAABAAAAAQAAAAAAAEJCQgBYWFgAY2JjAG5tbgB5eHgAhoaGAJGRkQCamZkApKOkAK+u
        rwC6uboAxcTFAPHv8AD29vYA+fn5AA3u6QDq//8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA////AAAAAAAAAAAAAAAAAAAKCgoKCgAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAwMDAwMDAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoKCgoKCgoKCgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAADAwMDAwMDAwMDAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAoKCgoKCgoKCgoKAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAEAoKCgoKCgoKChAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQEAsQEBAQEAsQEAAAAAAA
        AAAAAAAAAAAAAAAAAAAAABAQCxAQEBAQCxAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBALEBAQEBALEBAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAQEAsQEBAQEAsQEAAAAAAAAAAAAAAAAAAAAAAAAAAAABALEBAQEBAQ
        EAsQAAAAAAAAAAAAAAAAAAAAAAAAAAAQEAsQEBAQEBAQCxAQAAAAAAAAAAAAAAAAAAAAAAAAABAQCxAQ
        EBAQEBALEBAAAAAAAAAAAAAAAAAAAAAAAAAQEBALEBAQEBAQEAsQEBAAAAAAAAAAAAAAAAAAAAAAABAQ
        CwsQEBAQEBAQCwsQEAAAAAAAAAAAAAAAAAAAAAAAEBALEBAQEBAQEBAQCxAQAAAAAAAAAAAAAAAAAAAA
        ABAQEBEQEBAQEBAQERELEBAQAAAAAAAAAAAAAAAAAAAAEBAQEREREBAQEBEREREQEBAAAAAAAAAAAAAA
        AAAAAAAQEBAQERERERERERARERAQEAAAAAAAAAAAAAAAAAAAEBAQEBAREBEREREREREQEBAQEAAAAAAA
        AAAAAAAAAAAQEBAQEBARERAQEBAQEBAQEBAQAAAAAAAAAAAAAAAAABAQEBAQEBAQEBAQEBAQEBAQEBAA
        AAAAAAAAAAAAAAAAEBAQEBAQEBAQEBAQEBAQEBAQEAAAAAAAAAAAAAAAAAAQEBAQEBAQEBAQEBAQEBAQ
        EBAQAAAAAAAAAAAAAAAAABAQEBAQEBAQEBAQEBAQEBAQEBAAAAAAAAAAAAAAAAAAABAQEBAQEBAQEBAQ
        EBAQEBAQAAAAAAAAAAAAAAAAAAAAEBAQEBAQEBAQEBAQEBAQEBAAAAAAAAAAAAAAAAAAAAAAEBAQEBAQ
        EBAQEBAQEBAQAAAAAAAAAAAAAAAAAAAAAAAQEBAQEBAQEBAQEBAQEBAAAAAAAAAAAAAAAAAAAAAAAAAQ
        EBAQEBAQEBAQEBAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAQEBAQEBAQAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/+D////Af///gD///wAf//8AH///AB///wAf//8AH///A
        B///wAf//8AH//+AA///gAP//wAB//8AAf//AAH//gAA//4AAP/+AAD//AAAf/wAAH/8AAB//AAAf/wA
        AH/8AAB//gAA//4AAP//AAH//wAB//+AA///4A///////ygAAAAQAAAAIAAAAAEACAAAAAAAAAEAAAAA
        AAAAAAAAAAEAAAABAAAAAAAAQkJCAFhYWACGhoYAmpmZAJycnACko6QA0M/PAObk5QDx7/AA9vb2AAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAHHv8gDq/v8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD///8AAAAAAAAABgYAAAAAAAAAAAAAAAAAAgICAgAAAAAAAAAAAAAAAAYGBgYA
        AAAAAAAAAAAAAAARBwcRAAAAAAAAAAAAAAAAEQcHEQAAAAAAAAAAAAAAABEHEQcAAAAAAAAAAAAAABEH
        BxEHEQAAAAAAAAAAAAAREhISEhEAAAAAAAAAAAARERIRERISEQAAAAAAAAAAERESEhISEREAAAAAAAAA
        ABERERERERERAAAAAAAAAAAREREREREREQAAAAAAAAAAEREREREREREAAAAAAAAAAAAREREREREAAAAA
        AAAAAAAAABEREREAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPz/AAD4fwAA+H8AAPh/AAD4fwAA+H8AAPA/
        AADwPwAA4B8AAOAfAADgHwAA4B8AAOAfAADwPwAA+H8AAP//AAA=
</value>
  </data>
</root>